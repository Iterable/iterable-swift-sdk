name: Build and test

on: pull_request

jobs:
  run-tests-job:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1.6.0
        with:
          xcode-version: latest-stable

      - name: Setup Ruby and xcpretty
        run: |
          gem install erb
          gem install xcpretty

      - name: Print available simulators
        run: xcrun simctl list devices | cat

      - name: List and select simulator
        id: select-simulator
        run: |
          # List all simulators and find an iPhone 15 or 16 simulator
          SIMULATOR_INFO=$(xcrun simctl list devices | grep -E 'iPhone (15|16)' | grep -v 'unavailable' | head -n 1)
          if [ -z "$SIMULATOR_INFO" ]; then
            echo "No iPhone 15 or 16 simulator found"
            exit 1
          fi
          
          # Extract device name and runtime version
          DEVICE_NAME=$(echo $SIMULATOR_INFO | sed -E 's/^[[:space:]]*([^(]+).*/\1/')
          OS_VERSION=$(echo $SIMULATOR_INFO | grep -oE 'iOS [0-9]+\.[0-9]+' | cut -d' ' -f2)
          
          echo "Selected simulator: $DEVICE_NAME (iOS $OS_VERSION)"
          echo "device_name=$DEVICE_NAME" >> $GITHUB_OUTPUT
          echo "os_version=$OS_VERSION" >> $GITHUB_OUTPUT

      - name: Build and test
        run: |
          xcodebuild test -project swift-sdk.xcodeproj -scheme swift-sdk -sdk iphonesimulator -destination "platform=iOS Simulator,name=${{ steps.select-simulator.outputs.device_name }},OS=${{ steps.select-simulator.outputs.os_version }}" -enableCodeCoverage YES CODE_SIGNING_REQUIRED=NO | xcpretty && exit ${PIPESTATUS[0]}

      - name: CocoaPods lint
        run: pod lib lint --allow-warnings

      - name: Upload coverage report to codecov.io
        run: bash <(curl -s https://codecov.io/bash) -X gcov -J 'IterableSDK' -J 'IterableAppExtensions'

      - name: Create Test Report
        uses: kishikawakatsumi/xcresulttool@v1
        with:
          path: TestResults.xcresult
        if: success() || failure()
