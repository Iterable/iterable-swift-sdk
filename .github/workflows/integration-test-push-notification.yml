name: Push Notification Integration Test

on:
  pull_request:
    paths:
      - 'tests/business-critical-integration/**'
      - '.github/workflows/integration-test-push-notification.yml'
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch or commit to test (leave empty for current branch)'
        required: false
        type: string

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

jobs:
  push-notification-test:
    name: Push Notification Integration Test
    runs-on: macos-latest
    timeout-minutes: 30
    if: >
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'pull_request' && 
        (
          contains(github.event.pull_request.labels.*.name, 'bcit') ||
          contains(github.event.pull_request.labels.*.name, 'bcit-push') ||
          github.event.action != 'labeled'
        )
      )

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref || github.ref }}

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'

    - name: Setup Local Environment
      working-directory: tests/business-critical-integration
      run: |
        echo "üöÄ Setting up local environment for integration tests..."
        
        # Run setup script with parameters from repository secrets
        ./scripts/setup-local-environment.sh \
          "${{ secrets.BCIT_TEST_PROJECT_ID }}" \
          "${{ secrets.BCIT_ITERABLE_SERVER_KEY }}" \
          "${{ secrets.BCIT_ITERABLE_API_KEY }}"

    - name: Validate Setup
      working-directory: tests/business-critical-integration
      run: |
        echo "üîç Validating environment setup..."
        ./scripts/validate-setup.sh

    - name: Run Push Notification Tests
      working-directory: tests/business-critical-integration
      run: |
        echo "üß™ Running push notification integration tests..."
        ./scripts/run-tests.sh push

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: push-notification-test-results
        path: |
          tests/business-critical-integration/reports/
          tests/business-critical-integration/screenshots/
          tests/business-critical-integration/logs/
        retention-days: 7