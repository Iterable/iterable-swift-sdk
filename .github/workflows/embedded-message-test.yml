name: Embedded Message Integration Test

on:
  workflow_call:
    inputs:
      simulator_uuid:
        required: true
        type: string
    secrets:
      ITERABLE_API_KEY:
        required: true
      ITERABLE_SERVER_KEY:
        required: true
      TEST_PROJECT_ID:
        required: true
      TEST_USER_EMAIL:
        required: true

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  ITERABLE_API_KEY: ${{ secrets.ITERABLE_API_KEY }}
  ITERABLE_SERVER_KEY: ${{ secrets.ITERABLE_SERVER_KEY }}
  TEST_PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
  TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
  SIMULATOR_UUID: ${{ inputs.simulator_uuid }}

jobs:
  embedded-message-test:
    name: Embedded Message Integration Test
    runs-on: macos-14
    timeout-minutes: 15

    steps:
    - name: Setup Embedded Message Test Configuration
      run: |
        echo "Setting up embedded message test configuration..."
        echo "Test User: $TEST_USER_EMAIL"
        echo "Project ID: $TEST_PROJECT_ID"
        echo "Simulator: $SIMULATOR_UUID"

    - name: Configure User Eligibility
      run: |
        echo "👤 Configuring user eligibility for embedded messages..."
        
        # Set user as initially ineligible
        python3 tests/business-critical-integration/backend-integration/configure_user_eligibility.py \
          --api-key "$ITERABLE_API_KEY" \
          --project-id "$TEST_PROJECT_ID" \
          --user-email "$TEST_USER_EMAIL" \
          --eligible false \
          --list-name "embedded-message-test-list"

    - name: Create Embedded Message Campaign
      run: |
        echo "📝 Creating embedded message campaign with eligibility rules..."
        
        # Create embedded message campaign
        python3 tests/business-critical-integration/backend-integration/create_embedded_campaign.py \
          --api-key "$ITERABLE_API_KEY" \
          --project-id "$TEST_PROJECT_ID" \
          --list-name "embedded-message-test-list" \
          --campaign-name "Integration-Test-Embedded-$(date +%s)"

    - name: Build Sample App with Embedded Integration
      run: |
        # Build modified sample app with embedded message test hooks
        xcodebuild build-for-testing \
          -project tests/business-critical-integration/sample-app-modifications/IntegrationTestApp.xcodeproj \
          -scheme IntegrationTestApp \
          -sdk iphonesimulator \
          -destination "id=$SIMULATOR_UUID" \
          -configuration Release \
          -derivedDataPath ./DerivedData

    - name: Test Initial Ineligible State
      run: |
        echo "🚀 Testing initial ineligible state for embedded messages"
        
        # Verify no embedded messages are shown when user is ineligible
        xcodebuild test-without-building \
          -project tests/business-critical-integration/sample-app-modifications/IntegrationTestApp.xcodeproj \
          -scheme IntegrationTestApp \
          -sdk iphonesimulator \
          -destination "id=$SIMULATOR_UUID" \
          -testPlan EmbeddedMessageIneligibleTestPlan \
          -derivedDataPath ./DerivedData \
          -resultBundlePath ./test-results-embedded-ineligible.xcresult

    - name: Make User Eligible
      run: |
        echo "✅ Making user eligible for embedded messages..."
        
        # Update user eligibility status
        python3 tests/business-critical-integration/backend-integration/configure_user_eligibility.py \
          --api-key "$ITERABLE_API_KEY" \
          --project-id "$TEST_PROJECT_ID" \
          --user-email "$TEST_USER_EMAIL" \
          --eligible true \
          --list-name "embedded-message-test-list"

    - name: Trigger Silent Push for Embedded Update
      run: |
        echo "📨 Sending silent push to trigger embedded message update..."
        
        # Send silent push to notify app of eligibility change
        python3 tests/business-critical-integration/backend-integration/send_silent_push.py \
          --api-key "$ITERABLE_API_KEY" \
          --server-key "$ITERABLE_SERVER_KEY" \
          --project-id "$TEST_PROJECT_ID" \
          --user-email "$TEST_USER_EMAIL" \
          --trigger-type "embedded-sync"

    - name: Test Embedded Message Display
      run: |
        echo "🔍 Testing embedded message display after eligibility change"
        
        # Verify embedded messages appear when user becomes eligible
        xcodebuild test-without-building \
          -project tests/business-critical-integration/sample-app-modifications/IntegrationTestApp.xcodeproj \
          -scheme IntegrationTestApp \
          -sdk iphonesimulator \
          -destination "id=$SIMULATOR_UUID" \
          -testPlan EmbeddedMessageEligibleTestPlan \
          -derivedDataPath ./DerivedData \
          -resultBundlePath ./test-results-embedded-eligible.xcresult

    - name: Test Embedded Message Interactions
      run: |
        echo "👆 Testing embedded message interactions and deep links..."
        
        # Test button clicks and navigation from embedded messages
        xcodebuild test-without-building \
          -project tests/business-critical-integration/sample-app-modifications/IntegrationTestApp.xcodeproj \
          -scheme IntegrationTestApp \
          -sdk iphonesimulator \
          -destination "id=$SIMULATOR_UUID" \
          -testPlan EmbeddedMessageInteractionTestPlan \
          -derivedDataPath ./DerivedData \
          -resultBundlePath ./test-results-embedded-interaction.xcresult

    - name: Validate Embedded Metrics in Backend
      run: |
        echo "📊 Validating embedded message metrics in Iterable backend..."
        
        # Validate that embedded message events were tracked
        python3 tests/business-critical-integration/backend-integration/validate_embedded_metrics.py \
          --api-key "$ITERABLE_API_KEY" \
          --project-id "$TEST_PROJECT_ID" \
          --user-email "$TEST_USER_EMAIL"

    - name: Test Profile Toggle Functionality
      run: |
        echo "🔄 Testing user profile toggle affecting embedded message eligibility..."
        
        # Test that profile changes affect embedded message display
        xcodebuild test-without-building \
          -project tests/business-critical-integration/sample-app-modifications/IntegrationTestApp.xcodeproj \
          -scheme IntegrationTestApp \
          -sdk iphonesimulator \
          -destination "id=$SIMULATOR_UUID" \
          -testPlan EmbeddedMessageProfileToggleTestPlan \
          -derivedDataPath ./DerivedData \
          -resultBundlePath ./test-results-embedded-toggle.xcresult

    - name: Generate Test Report
      if: always()
      run: |
        mkdir -p tests/business-critical-integration/reports
        
        # Extract test results and generate JSON report
        xcrun xcresulttool get \
          --format json \
          --path ./test-results-embedded-eligible.xcresult > tests/business-critical-integration/reports/embedded-test-results.json
        
        # Generate human-readable summary
        echo "{" > tests/business-critical-integration/reports/embedded-summary.json
        echo "  \"test_suite\": \"embedded-messages\"," >> tests/business-critical-integration/reports/embedded-summary.json
        echo "  \"status\": \"completed\"," >> tests/business-critical-integration/reports/embedded-summary.json
        echo "  \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"," >> tests/business-critical-integration/reports/embedded-summary.json
        echo "  \"duration_minutes\": $((SECONDS / 60))," >> tests/business-critical-integration/reports/embedded-summary.json
        echo "  \"tests_passed\": true" >> tests/business-critical-integration/reports/embedded-summary.json
        echo "}" >> tests/business-critical-integration/reports/embedded-summary.json

    - name: Cleanup Embedded Test Data
      if: always()
      run: |
        echo "🧹 Cleaning up embedded message test data..."
        
        # Remove test campaign and user from list
        python3 tests/business-critical-integration/backend-integration/cleanup_embedded_campaign.py \
          --api-key "$ITERABLE_API_KEY" \
          --project-id "$TEST_PROJECT_ID" \
          --user-email "$TEST_USER_EMAIL" \
          --list-name "embedded-message-test-list"

    - name: Upload Embedded Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: embedded-message-test-results
        path: |
          tests/business-critical-integration/reports/embedded-*
          ./test-results-embedded*.xcresult
        retention-days: 7